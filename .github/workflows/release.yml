name: Release
on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 5
          persist-credentials: false

      - name: Setup Java 11 and Apache Maven
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 11
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Configure GIT
        run: |
          git config --global user.name "Gluon Bot"
          git config --global user.email "githubbot@gluonhq.com"

      - name: Publish to Maven Central
        id: deploy
        run: |
          mvn deploy -DskipTests=true -B -U -Prelease
          echo ::set-output name=exit_code::$?
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

  commit-development-version:
    runs-on: ubuntu-latest
    needs: [ release ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 5
          persist-credentials: false
      - name: Commit next development version
        run: |
          git config user.email "githubbot@gluonhq.com"
          git config user.name "Gluon Bot"
          TAG=${GITHUB_REF/refs\/tags\//}
          SUBSTRATE_VERSION=$(mvn help:evaluate -Dexpression=substrate.version -q -DforceStdout)
          NEW_SUBSTRATE_VERSION=${SUBSTRATE_VERSION%.*}.$((${SUBSTRATE_VERSION##*.} + 1))
          NEW_PROJECT_VERSION=${TAG%.*}.$((${TAG##*.} + 1))
          echo "Update project version to next snapshot version"
          mvn -ntp versions:set -DnewVersion=$NEW_PROJECT_VERSION-SNAPSHOT -DgenerateBackupPoms=false
          echo "Update Substrate to next snapshot version"
          mvn -ntp versions:set-property -Dproperty=substrate.version -DnewVersion=$NEW_SUBSTRATE_VERSION-SNAPSHOT -DgenerateBackupPoms=false
          git commit pom.xml -m "Prepare development of $NEW_PROJECT_VERSION"
          git push https://gluon-bot:$PAT@github.com/$GITHUB_REPOSITORY HEAD:master
        shell: bash
        env:
          PAT: ${{ secrets.PAT }}

  release-notes:
    runs-on: ubuntu-latest
    needs: [ release ]
    steps:
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true

  update:
    runs-on: ubuntu-latest
    needs: [ release ]
    outputs:
      TAG: ${{ steps.vars.outputs.TAG }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: export tag
        if: steps.deploy.outputs.exit_code == 0
        run: |
          export TAG=${GITHUB_REF/refs\/tags\//}
          echo TAG=$TAG >> $GITHUB_OUTPUT
        shell: bash

  samples:
    runs-on: ubuntu-latest
    needs: [ update ]
    env:
      TAG: ${{ needs.update.outputs.TAG }}
      REPOSITORY: gluonhq/gluon-samples
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPOSITORY }}
          persist-credentials: false
          token: ${{ secrets.PAT }}
      - name: update and commit gluonfx version
        run: |
          mvn -ntp versions:set-property -Dproperty=gluonfx.maven.plugin.version -DnewVersion="$TAG" -DgenerateBackupPoms=false
      - name: commit gluonfx version
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Gluon Bot
          author_email: githubbot@gluonhq.com
          message: 'Update gluonfx-maven-plugin version to ${{ env.TAG }}'

  hello-gluon-ci:
    runs-on: ubuntu-latest
    needs: [ update ]
    env:
      TAG: ${{ needs.update.outputs.TAG }}
      REPOSITORY: gluonhq/hello-gluon-ci
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPOSITORY }}
          persist-credentials: false
          token: ${{ secrets.PAT }}
      - name: update gluonfx version
        run: |
          mvn -ntp versions:set-property -Dproperty=gluonfx.maven.plugin.version -DnewVersion="$TAG" -DgenerateBackupPoms=false
      - name: commit gluonfx version
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Gluon Bot
          author_email: githubbot@gluonhq.com
          message: 'Update gluonfx-maven-plugin version to ${{ env.TAG }}'

  archetypes:
    runs-on: ubuntu-latest
    needs: [ update ]
    env:
      TAG: ${{ needs.update.outputs.TAG }}
      REPOSITORY: gluonhq/gluonfx-maven-archetypes
    steps:
      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install xmlstarlet
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPOSITORY }}
          persist-credentials: false
          token: ${{ secrets.PAT }}
      - name: update gluonfx version
        run: |
          XML_LOCATION=src/main/resources/META-INF/maven/archetype-metadata.xml
          # Traverse through all sub-directories starting with "gluonfx-archetype-"
          for f in ./gluonfx-archetype-* ; do
            # f is directory and not a symlink
            if [[  -d "$f" && ! -L "$f" ]]; then\
              # Update <defaultValue> inside <requiredProperty> with key='gluonfx-maven-plugin-version'
              xmlstarlet ed -P -L -u "//_:requiredProperty[@key='gluonfx-maven-plugin-version']/_:defaultValue" -v "$TAG" "$f"/$XML_LOCATION
          fi
          done
        shell: bash
      - name: commit gluonfx version
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Gluon Bot
          author_email: githubbot@gluonhq.com
          message: 'Update gluonfx-maven-plugin version to ${{ env.TAG }}'

  docs:
    runs-on: ubuntu-latest
    needs: [ update ]
    env:
      TAG: ${{ needs.update.outputs.TAG }}
      REPOSITORY: gluonhq/docs
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPOSITORY }}
          persist-credentials: false
          token: ${{ secrets.PAT }}
      - name: update gluonfx version
        run: |
          sed -i "s/GLUONFX_MAVEN_PLUGIN_VERSION=.*/GLUONFX_MAVEN_PLUGIN_VERSION=$TAG/g" gradle.properties
          sed -i "s/GLUONFX_GRADLE_PLUGIN_VERSION=.*/GLUONFX_GRADLE_PLUGIN_VERSION=$TAG/g" gradle.properties
      - name: commit gluonfx version
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Gluon Bot
          author_email: githubbot@gluonhq.com
          message: 'Update GluonFX plugins to version to ${{ env.TAG }}'

  ide-properties:
    runs-on: ubuntu-latest
    needs: [ update ]
    env:
      TAG: ${{ needs.update.outputs.TAG }}
    steps:
      - name: update properties
        run:
          aws s3 cp s3://download.gluonhq.com/ideplugins/settings-2.10.4.properties /tmp --region us-east-1 --debug
          sed -i "s/gluonfxMavenPlugin=.*/gluonfxMavenPlugin=$TAG/g" /tmp/settings-2.10.4.properties
          aws s3 cp /tmp/settings-2.10.4.properties s3://download.gluonhq.com/ideplugins/ --acl public-read --region us-east-1 --debug
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
